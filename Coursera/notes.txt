answer concept questions


React is a front end JS library for creating UI components. It works by creating a virtual DOM tree and helping us reconcile it with real DOM tree, which is shown in the browser. For example, you create a component that is a counter
and every time you click it the count goes up by one. So in this example, every time the count goes up, the state is updating as well.

Redux is a JS framework for managing the frontend state of a web application. It stores information so that we can retrieve that information anywhere in the app.

Context is built into React and gives you a way to store and manage global state in your React applications.

The state of a program means all the information stored by that program at a particular point in time.

A reducer is a function that is called each time an action is dispatched. The reducer receives an action returns an updated state.

Flask is a Python framework for building web applications.

PostgreSQL is a relational database management systems, or RDBMS for short. It's a program that you run that your apps can connect to to store and retrieve data.

Sequelize or SQL is the languange of relational data. It uses keywords like select, join, where, and a bunch of others to perform actions on data in a table.

SQLAlchemy is the Python object relational mapper and is similar to rdbms. It allows us to create tables and columns within the code itself.

The idea behind the Single Responsibility Principle is that every class, module, or function in a program should have one responsibility/purpose in a program.

AWS S3 (Simple Storage Service) is a service provided by Amazon that lets us store data in buckets for easy access.

CRUD stands for Create, Read, Update, and Delete. It's used by web developers as kind of guidelines for their app. For example, I have an Instagram clone that allows users to create posts, read all posts created, and update or delete any
of these posts.

Express is a vanilla Javascript framework for developing apps. It reduces the amount of boilerplate code we have to write so we can get right into creating our app.

API stands for Application Programming Interface. It refers to a software with a particular function. For example, if I use the Robinhood API to create an app I would get live updates of stock prices that reflect the Robinhood app itself.

ReST stands for Represantational State Transfer. It's defines rules for designing networked applications, such as the client and the server should not be dependent on each other, stateless endpoints which means data
received from the server can be used by the client independently, and that all CRUD operations are meant to be uniform.

OOP stands for object oriented programming. It's objective is to break down complex problems into simple solutions by following the OOP mindset. There are four basic principles of OOP and they are encapsulation, abstraction, inheritance,
and polymorphism. Encapsulation wants us to make sure our classes combine data and functions in one place, inheritance encourages reusabiltiy of code by letting child classes adopt from parent classes, abstraction wants us to hide any
and all data that is unneccesary, and polymorphism wants us to be able to access multiple classes within one interface.

The source code of a Python program is converted into bytecode that is then executed by the Python virtual machine. The alternative to an interpretor is a compile language, where it's compiled into an executable and run by the computer directly
no middle layer like the Python interpreter and this is the reason why Python is generally slower but is OS agnostic making it very portable.



